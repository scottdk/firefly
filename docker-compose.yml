#
# The Firefly III Data Importer will ask you for the Firefly III URL and a "Client ID".
# You can generate the Client ID at http://localhost/profile (after registering)
# The Firefly III URL is: http://app:8080
#
# Other URL's will give 500 | Server Error
#

services:
  app:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly_iii_core
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: .envfiles/.env
    networks:
      - firefly_iii
    ports:
      - 80:8080
    depends_on:
      - db
  db:
    image: mariadb:lts
    hostname: db
    container_name: firefly_iii_db
    restart: always
    env_file: .envfiles/.db.env
    networks:
      - firefly_iii
    volumes:
      - firefly_iii_db:/var/lib/mysql

  importer:
    image: fireflyiii/data-importer:latest
    hostname: importer
    restart: always
    container_name: firefly_iii_importer
    networks:
      - firefly_iii
    ports:
      - '81:8080'
    depends_on:
      - app
    env_file: .envfiles/.importer.env

  cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace PLEASE_REPLACE_WITH_32_CHAR_CODE below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    # Use this URL for inspiration: https://www.random.org/strings/?num=1&len=32&digits=on&upperalpha=on&loweralpha=on&unique=on&format=html&rnd=new
    #
    image: alpine
    restart: always
    container_name: firefly_iii_cron
    env_file: .envfiles/.env
    command: sh -c " apk add tzdata && ln -s /usr/share/zoneinfo/${TZ} /etc/localtime | echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/PLEASE_REPLACE_WITH_32_CHAR_CODE;echo\" | crontab - && crond -f -L /dev/stdout"
    networks:
      - firefly_iii

  phpmyadmin:
    image: phpmyadmin
    # build:
    #   context: .
    #   dockerfile: ./dockerfiles/Dockerfile.phpmyadmin
    restart: always
    hostname: ff-phpmyadmin
    ports:
      - 8084:80
    networks:
      - web
      - internal
    environment:
      - PMA_ARBITRARY=1

  redisff:
    image: redis
    container_name: redisff
    hostname: redisff
    restart: always
    networks:
      - firefly_iii

volumes:
  firefly_iii_upload:
  firefly_iii_db:


networks:
  firefly_iii:
    driver: bridge
