#
# The Firefly III Data Importer will ask you for the Firefly III URL and a "Client ID".
# You can generate the Client ID at http://localhost/profile (after registering)
# The Firefly III URL is: http://app:8080
#
# Other URL's will give 500 | Server Error
#

include:
  - secrets.yml

services:
  app:
    image: fireflyiii/core:latest
    hostname: app
    container_name: firefly_iii_core
    restart: always
    volumes:
      - firefly_iii_upload:/var/www/html/storage/upload
    env_file: .envfiles/.env
    networks:
      - firefly_iii
    ports:
      - 18080:8080
    secrets:
      - app_key
      - db_database
      - db_password
      - db_user
      - mail_encryption
      - mail_from_address
      - mail_host
      - mail_mailer
      - mail_password
      - mail_port
      - mail_username
      - map_default_lat
      - map_default_long
      - site_owner
      - timezone
      - vanity_url
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.http.routers.firefly.rule=Host(`firefly.fet.fit`)"
      - "traefik.http.routers.firefly.entrypoints=websecure"
      - "traefik.http.services.firefly.loadbalancer.server.port=8080"
      - "traefik.http.routers.firefly.tls.certresolver=lets-encrypt"
    depends_on:
      - db

  db:
    image: mariadb:lts
    hostname: db
    container_name: firefly_iii_db
    restart: always
    env_file: .envfiles/.db.env
    networks:
      - firefly_iii
    secrets:
      - db_database
      - db_password
      - db_root_password
      - db_user
    volumes:
      - firefly_iii_db:/var/lib/mysql

  importer:
    image: fireflyiii/data-importer:latest
    hostname: importer
    restart: always
    container_name: firefly_iii_importer
    networks:
      - firefly_iii
    ports:
      - '81:8080'
    depends_on:
      - app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ffdata.rule=Host(`ffdata.fet.fit`)"
      - "traefik.http.routers.ffdata.entrypoints=websecure"
      - "traefik.http.services.ffdata.loadbalancer.server.port=8080"
      - "traefik.http.routers.ffdata.tls.certresolver=lets-encrypt"
      - "traefik.http.middlewares.ffdata-auth.basicAuth.users=admin:$$apr1$$BNuLy8aR$$jF9QYMFQ9ynsEspct2jGz."
      - "traefik.http.routers.ffdata.middlewares=ffdata-auth"
    secrets:
      - auto_import_secret
      - firefly_iii_access_token
      - firefly_iii_client_id
      - mail_destination
      - mail_encryption
      - mail_from_address
      - mail_host
      - mail_mailer
      - mail_password
      - mail_port
      - mail_username
      - spectre_app_id
      - spectre_customer_identifier
      - spectre_secret
      - timezone
      - vanity_url

    env_file: .envfiles/.importer.env

  # cron:
  #   #
  #   # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace PLEASE_REPLACE_WITH_32_CHAR_CODE below
  #   # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
  #   # Use this URL for inspiration: https://www.random.org/strings/?num=1&len=32&digits=on&upperalpha=on&loweralpha=on&unique=on&format=html&rnd=new
  #   #
  #   image: alpine
  #   restart: always
  #   container_name: firefly_iii_cron
  #   environment:
  #     - TIMEZONE=${TZ}
  #   env_file: .envfiles/.env
  #   command: sh -c " apk add tzdata && ln -s /usr/share/zoneinfo/${TIMEZONE} /etc/localtime | echo \"0 3 * * * wget -qO- http://app:8080/api/v1/cron/PLEASE_REPLACE_WITH_32_CHAR_CODE;echo\" | crontab - && crond -f -L /dev/stdout"
  #   networks:
  #     - firefly_iii

  phpmyadmin:
    image: phpmyadmin
    # build:
    #   context: .
    #   dockerfile: ./dockerfiles/Dockerfile.phpmyadmin
    restart: always
    hostname: ff-phpmyadmin
    ports:
      - 8084:80
    networks:
      - web
      - firefly_iii
    environment:
      - PMA_ARBITRARY=1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ffphpmyadmin.rule=Host(`php.fet.fit`)"
      - "traefik.http.routers.ffphpmyadmin.entrypoints=websecure"
      - "traefik.http.services.ffphpmyadmin.loadbalancer.server.port=80"
      - "traefik.http.routers.ffphpmyadmin.tls.certresolver=lets-encrypt"

  redisff:
    image: redis
    container_name: redisff
    hostname: redisff
    restart: always
    networks:
      - firefly_iii

volumes:
  firefly_iii_upload:
  firefly_iii_db:


networks:
  web:
    external: true
  firefly_iii:
    external: false
